name: All Builds (Linux, macOS, Windows, Android, IPA, APK, AAB)

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.24.0
  APK_PATH: "build/apk/app-release.apk"


jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Clean Build Directory and Flutter
      run: |
        echo "Cleaning build directories and Flutter..."
        rm -rf build
        if [ -f "pubspec.yaml" ]; then
          flutter clean
          echo "Flutter cleaned successfully."
        else
          echo "No pubspec.yaml found. Skipping Flutter clean."
        fi

    - name: Verify Flutter and Flet Installation
      run: |
        echo "Verifying Flutter and Flet installation..."
        flutter doctor
        flet --version

    - name: Configure Flutter
      run: |
        if [ -f "pubspec.yaml" ]; then
          flutter config --no-analytics
          echo "Flutter configured successfully."
        else
          echo "No pubspec.yaml found. Skipping Flutter configuration."
        fi

    - name: Flet Build APK
      run: |
        if [ -f "pubspec.yaml" ]; then
          echo "Starting Flet APK build..."
          flet build apk --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION 2>&1 | tee flet_build.log
          echo "Flet APK build completed."
        else
          echo "No pubspec.yaml found. Skipping APK build."
        fi

    - name: List All Files in Build Directory
      run: |
        if [ -d "build" ]; then
          echo "Listing all files in the build directory:"
          find build -type f -print
        else
          echo "Build directory does not exist. Skipping file listing."
        fi

    - name: Verify APK Existence
      id: verify-apk
      run: |
        if [ -f "$APK_PATH" ]; then
          echo "APK file found at $APK_PATH"
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
        else
          echo "Error: APK file not found at $APK_PATH!"
          exit 1
        fi

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: apk-build-artifact
        path: ${{ env.APK_PATH }}
        if-no-files-found: error
        overwrite: false
