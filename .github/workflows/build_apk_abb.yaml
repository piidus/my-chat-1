name: APK and AAB Build

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.24.1
  APK_PATH: "build/apk/app-release.apk"
  AAB_PATH: "build/aab/app-release.aab"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Clean Build Directory (if pubspec.yaml found)
      run: |
        echo "Checking for pubspec.yaml..."
        if [ -f "pubspec.yaml" ]; then
          echo "pubspec.yaml found. Checking if Flutter is available..."
          if command -v flutter >/dev/null 2>&1; then
            echo "Flutter found. Cleaning build directory..."
            flutter clean
          else
            echo "Flutter not found. Skipping clean step."
          fi
          echo "Removing build directory..."
          rm -rf build
        else
          echo "No pubspec.yaml found. Skipping clean step."
        fi

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Verify Flutter Installation
      run: |
        echo "Checking Flutter version..."
        flutter --version

    - name: Configure Flutter
      run: |
        echo "Configuring Flutter..."
        flutter config --no-analytics

    - name: Build APK and AAB
      run: |
        echo "Starting APK and AAB build..."
        echo "Flet build apk command:"
        flet build apk --build-version ${{ env.BUILD_VERSION }} --build-number ${{ env.BUILD_NUMBER }} --verbose
        echo "Flet build aab command:"
        flet build aab --build-version ${{ env.BUILD_VERSION }} --build-number ${{ env.BUILD_NUMBER }} --verbose

    - name: List All Files in Build Directory
      run: |
        echo "Listing all files in the build directory:"
        find build -type f -print || echo "Build directory does not exist or is empty."

    - name: Verify APK and AAB Existence
      id: verify-files
      run: |
        echo "Verifying APK and AAB files..."
        if [ -f "$APK_PATH" ]; then
          echo "APK file found at $APK_PATH"
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
        else
          echo "Error: APK file not found at $APK_PATH!"
          exit 1
        fi
        if [ -f "$AAB_PATH" ]; then
          echo "AAB file found at $AAB_PATH"
          echo "AAB_PATH=$AAB_PATH" >> $GITHUB_ENV
        else
          echo "Error: AAB file not found at $AAB_PATH!"
          exit 1
        fi

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: apk-build-artifact
        path: ${{ env.APK_PATH }}
        if-no-files-found: error
        overwrite: false

    - name: Upload AAB Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: aab-build-artifact
        path: ${{ env.AAB_PATH }}
        if-no-files-found: error
        overwrite: false
